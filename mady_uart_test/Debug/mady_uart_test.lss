
mady_uart_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000866  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  000008da  2**0
                  ALLOC
  2 .stab         00000b4c  00000000  00000000  000008dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000089e  00000000  00000000  00001428  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 07 04 	call	0x80e	; 0x80e <main>
  74:	0c 94 31 04 	jmp	0x862	; 0x862 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DioSetPinDirection>:
 */
#include"STD_TYPES.h"
#include"BIT_MATH.h"
#include"DioInterface.h"
#include"DIO_registers.h"
void DioSetPinDirection(u8 port,u8 pin,u8 direction){
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	27 97       	sbiw	r28, 0x07	; 7
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03
if(direction==OUTPUT){
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	81 30       	cpi	r24, 0x01	; 1
  9a:	09 f0       	breq	.+2      	; 0x9e <DioSetPinDirection+0x22>
  9c:	6f c0       	rjmp	.+222    	; 0x17c <DioSetPinDirection+0x100>
switch(port){
  9e:	89 81       	ldd	r24, Y+1	; 0x01
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3f 83       	std	Y+7, r19	; 0x07
  a6:	2e 83       	std	Y+6, r18	; 0x06
  a8:	8e 81       	ldd	r24, Y+6	; 0x06
  aa:	9f 81       	ldd	r25, Y+7	; 0x07
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	49 f1       	breq	.+82     	; 0x104 <DioSetPinDirection+0x88>
  b2:	2e 81       	ldd	r18, Y+6	; 0x06
  b4:	3f 81       	ldd	r19, Y+7	; 0x07
  b6:	22 30       	cpi	r18, 0x02	; 2
  b8:	31 05       	cpc	r19, r1
  ba:	2c f4       	brge	.+10     	; 0xc6 <DioSetPinDirection+0x4a>
  bc:	8e 81       	ldd	r24, Y+6	; 0x06
  be:	9f 81       	ldd	r25, Y+7	; 0x07
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	61 f0       	breq	.+24     	; 0xdc <DioSetPinDirection+0x60>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DioSetPinDirection+0x1ee>
  c6:	2e 81       	ldd	r18, Y+6	; 0x06
  c8:	3f 81       	ldd	r19, Y+7	; 0x07
  ca:	22 30       	cpi	r18, 0x02	; 2
  cc:	31 05       	cpc	r19, r1
  ce:	71 f1       	breq	.+92     	; 0x12c <DioSetPinDirection+0xb0>
  d0:	8e 81       	ldd	r24, Y+6	; 0x06
  d2:	9f 81       	ldd	r25, Y+7	; 0x07
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	91 05       	cpc	r25, r1
  d8:	e9 f1       	breq	.+122    	; 0x154 <DioSetPinDirection+0xd8>
  da:	c7 c0       	rjmp	.+398    	; 0x26a <DioSetPinDirection+0x1ee>
case PORTA: SET_BIT(DDRA_REG,pin);	break;
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	8a 81       	ldd	r24, Y+2	; 0x02
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DioSetPinDirection+0x7e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DioSetPinDirection+0x7a>
  fe:	84 2b       	or	r24, r20
 100:	8c 93       	st	X, r24
 102:	b3 c0       	rjmp	.+358    	; 0x26a <DioSetPinDirection+0x1ee>
case PORTB: SET_BIT(DDRB_REG,pin);	break;
 104:	a7 e3       	ldi	r26, 0x37	; 55
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	e7 e3       	ldi	r30, 0x37	; 55
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	48 2f       	mov	r20, r24
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 2e       	mov	r0, r18
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DioSetPinDirection+0xa6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	0a 94       	dec	r0
 124:	e2 f7       	brpl	.-8      	; 0x11e <DioSetPinDirection+0xa2>
 126:	84 2b       	or	r24, r20
 128:	8c 93       	st	X, r24
 12a:	9f c0       	rjmp	.+318    	; 0x26a <DioSetPinDirection+0x1ee>
case PORTC: SET_BIT(DDRC_REG,pin);	break;
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DioSetPinDirection+0xce>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DioSetPinDirection+0xca>
 14e:	84 2b       	or	r24, r20
 150:	8c 93       	st	X, r24
 152:	8b c0       	rjmp	.+278    	; 0x26a <DioSetPinDirection+0x1ee>
case PORTD: SET_BIT(DDRD_REG,pin);	break;
 154:	a1 e3       	ldi	r26, 0x31	; 49
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e1 e3       	ldi	r30, 0x31	; 49
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DioSetPinDirection+0xf6>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DioSetPinDirection+0xf2>
 176:	84 2b       	or	r24, r20
 178:	8c 93       	st	X, r24
 17a:	77 c0       	rjmp	.+238    	; 0x26a <DioSetPinDirection+0x1ee>

}


}
else if (direction==INPUT){
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	88 23       	and	r24, r24
 180:	09 f0       	breq	.+2      	; 0x184 <DioSetPinDirection+0x108>
 182:	73 c0       	rjmp	.+230    	; 0x26a <DioSetPinDirection+0x1ee>
	switch(port){
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	3d 83       	std	Y+5, r19	; 0x05
 18c:	2c 83       	std	Y+4, r18	; 0x04
 18e:	8c 81       	ldd	r24, Y+4	; 0x04
 190:	9d 81       	ldd	r25, Y+5	; 0x05
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	91 05       	cpc	r25, r1
 196:	59 f1       	breq	.+86     	; 0x1ee <DioSetPinDirection+0x172>
 198:	2c 81       	ldd	r18, Y+4	; 0x04
 19a:	3d 81       	ldd	r19, Y+5	; 0x05
 19c:	22 30       	cpi	r18, 0x02	; 2
 19e:	31 05       	cpc	r19, r1
 1a0:	2c f4       	brge	.+10     	; 0x1ac <DioSetPinDirection+0x130>
 1a2:	8c 81       	ldd	r24, Y+4	; 0x04
 1a4:	9d 81       	ldd	r25, Y+5	; 0x05
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	69 f0       	breq	.+26     	; 0x1c4 <DioSetPinDirection+0x148>
 1aa:	5f c0       	rjmp	.+190    	; 0x26a <DioSetPinDirection+0x1ee>
 1ac:	2c 81       	ldd	r18, Y+4	; 0x04
 1ae:	3d 81       	ldd	r19, Y+5	; 0x05
 1b0:	22 30       	cpi	r18, 0x02	; 2
 1b2:	31 05       	cpc	r19, r1
 1b4:	89 f1       	breq	.+98     	; 0x218 <DioSetPinDirection+0x19c>
 1b6:	8c 81       	ldd	r24, Y+4	; 0x04
 1b8:	9d 81       	ldd	r25, Y+5	; 0x05
 1ba:	83 30       	cpi	r24, 0x03	; 3
 1bc:	91 05       	cpc	r25, r1
 1be:	09 f4       	brne	.+2      	; 0x1c2 <DioSetPinDirection+0x146>
 1c0:	40 c0       	rjmp	.+128    	; 0x242 <DioSetPinDirection+0x1c6>
 1c2:	53 c0       	rjmp	.+166    	; 0x26a <DioSetPinDirection+0x1ee>
case PORTA: CLR_BIT(DDRA_REG,pin);	break;
 1c4:	aa e3       	ldi	r26, 0x3A	; 58
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	ea e3       	ldi	r30, 0x3A	; 58
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	48 2f       	mov	r20, r24
 1d0:	8a 81       	ldd	r24, Y+2	; 0x02
 1d2:	28 2f       	mov	r18, r24
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 2e       	mov	r0, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DioSetPinDirection+0x166>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DioSetPinDirection+0x162>
 1e6:	80 95       	com	r24
 1e8:	84 23       	and	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	3e c0       	rjmp	.+124    	; 0x26a <DioSetPinDirection+0x1ee>
case PORTB: CLR_BIT(DDRB_REG,pin);  break;
 1ee:	a7 e3       	ldi	r26, 0x37	; 55
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e7 e3       	ldi	r30, 0x37	; 55
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DioSetPinDirection+0x190>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DioSetPinDirection+0x18c>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
 216:	29 c0       	rjmp	.+82     	; 0x26a <DioSetPinDirection+0x1ee>
case PORTC: CLR_BIT(DDRC_REG,pin);	break;
 218:	a4 e3       	ldi	r26, 0x34	; 52
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e4 e3       	ldi	r30, 0x34	; 52
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DioSetPinDirection+0x1ba>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DioSetPinDirection+0x1b6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	14 c0       	rjmp	.+40     	; 0x26a <DioSetPinDirection+0x1ee>
case PORTD: CLR_BIT(DDRD_REG,pin);	break;
 242:	a1 e3       	ldi	r26, 0x31	; 49
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e1 e3       	ldi	r30, 0x31	; 49
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	8a 81       	ldd	r24, Y+2	; 0x02
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DioSetPinDirection+0x1e4>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <DioSetPinDirection+0x1e0>
 264:	80 95       	com	r24
 266:	84 23       	and	r24, r20
 268:	8c 93       	st	X, r24
	}

}
}
 26a:	27 96       	adiw	r28, 0x07	; 7
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <DioSetPinValue>:
void DioSetPinValue(u8 port,u8 pin,u8 value){
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	6a 83       	std	Y+2, r22	; 0x02
 294:	4b 83       	std	Y+3, r20	; 0x03
	if(value==1){
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	81 30       	cpi	r24, 0x01	; 1
 29a:	09 f0       	breq	.+2      	; 0x29e <DioSetPinValue+0x22>
 29c:	6f c0       	rjmp	.+222    	; 0x37c <DioSetPinValue+0x100>
switch(port){
 29e:	89 81       	ldd	r24, Y+1	; 0x01
 2a0:	28 2f       	mov	r18, r24
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	3f 83       	std	Y+7, r19	; 0x07
 2a6:	2e 83       	std	Y+6, r18	; 0x06
 2a8:	8e 81       	ldd	r24, Y+6	; 0x06
 2aa:	9f 81       	ldd	r25, Y+7	; 0x07
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	91 05       	cpc	r25, r1
 2b0:	49 f1       	breq	.+82     	; 0x304 <DioSetPinValue+0x88>
 2b2:	2e 81       	ldd	r18, Y+6	; 0x06
 2b4:	3f 81       	ldd	r19, Y+7	; 0x07
 2b6:	22 30       	cpi	r18, 0x02	; 2
 2b8:	31 05       	cpc	r19, r1
 2ba:	2c f4       	brge	.+10     	; 0x2c6 <DioSetPinValue+0x4a>
 2bc:	8e 81       	ldd	r24, Y+6	; 0x06
 2be:	9f 81       	ldd	r25, Y+7	; 0x07
 2c0:	00 97       	sbiw	r24, 0x00	; 0
 2c2:	61 f0       	breq	.+24     	; 0x2dc <DioSetPinValue+0x60>
 2c4:	d2 c0       	rjmp	.+420    	; 0x46a <DioSetPinValue+0x1ee>
 2c6:	2e 81       	ldd	r18, Y+6	; 0x06
 2c8:	3f 81       	ldd	r19, Y+7	; 0x07
 2ca:	22 30       	cpi	r18, 0x02	; 2
 2cc:	31 05       	cpc	r19, r1
 2ce:	71 f1       	breq	.+92     	; 0x32c <DioSetPinValue+0xb0>
 2d0:	8e 81       	ldd	r24, Y+6	; 0x06
 2d2:	9f 81       	ldd	r25, Y+7	; 0x07
 2d4:	83 30       	cpi	r24, 0x03	; 3
 2d6:	91 05       	cpc	r25, r1
 2d8:	e9 f1       	breq	.+122    	; 0x354 <DioSetPinValue+0xd8>
 2da:	c7 c0       	rjmp	.+398    	; 0x46a <DioSetPinValue+0x1ee>
case PORTA: SET_BIT(PORTA_REG,pin);	break;
 2dc:	ab e3       	ldi	r26, 0x3B	; 59
 2de:	b0 e0       	ldi	r27, 0x00	; 0
 2e0:	eb e3       	ldi	r30, 0x3B	; 59
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	48 2f       	mov	r20, r24
 2e8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ea:	28 2f       	mov	r18, r24
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	02 2e       	mov	r0, r18
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DioSetPinValue+0x7e>
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DioSetPinValue+0x7a>
 2fe:	84 2b       	or	r24, r20
 300:	8c 93       	st	X, r24
 302:	b3 c0       	rjmp	.+358    	; 0x46a <DioSetPinValue+0x1ee>
case PORTB: SET_BIT(PORTB_REG,pin);	break;
 304:	a8 e3       	ldi	r26, 0x38	; 56
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e8 e3       	ldi	r30, 0x38	; 56
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	80 81       	ld	r24, Z
 30e:	48 2f       	mov	r20, r24
 310:	8a 81       	ldd	r24, Y+2	; 0x02
 312:	28 2f       	mov	r18, r24
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 2e       	mov	r0, r18
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DioSetPinValue+0xa6>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	0a 94       	dec	r0
 324:	e2 f7       	brpl	.-8      	; 0x31e <DioSetPinValue+0xa2>
 326:	84 2b       	or	r24, r20
 328:	8c 93       	st	X, r24
 32a:	9f c0       	rjmp	.+318    	; 0x46a <DioSetPinValue+0x1ee>
case PORTC: SET_BIT(PORTC_REG,pin);	break;
 32c:	a5 e3       	ldi	r26, 0x35	; 53
 32e:	b0 e0       	ldi	r27, 0x00	; 0
 330:	e5 e3       	ldi	r30, 0x35	; 53
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	48 2f       	mov	r20, r24
 338:	8a 81       	ldd	r24, Y+2	; 0x02
 33a:	28 2f       	mov	r18, r24
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 2e       	mov	r0, r18
 344:	02 c0       	rjmp	.+4      	; 0x34a <DioSetPinValue+0xce>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	0a 94       	dec	r0
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DioSetPinValue+0xca>
 34e:	84 2b       	or	r24, r20
 350:	8c 93       	st	X, r24
 352:	8b c0       	rjmp	.+278    	; 0x46a <DioSetPinValue+0x1ee>
case PORTD: SET_BIT(PORTD_REG,pin);	break;
 354:	a2 e3       	ldi	r26, 0x32	; 50
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	e2 e3       	ldi	r30, 0x32	; 50
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	48 2f       	mov	r20, r24
 360:	8a 81       	ldd	r24, Y+2	; 0x02
 362:	28 2f       	mov	r18, r24
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	02 2e       	mov	r0, r18
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DioSetPinValue+0xf6>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <DioSetPinValue+0xf2>
 376:	84 2b       	or	r24, r20
 378:	8c 93       	st	X, r24
 37a:	77 c0       	rjmp	.+238    	; 0x46a <DioSetPinValue+0x1ee>

}


}
else if (value==0){
 37c:	8b 81       	ldd	r24, Y+3	; 0x03
 37e:	88 23       	and	r24, r24
 380:	09 f0       	breq	.+2      	; 0x384 <DioSetPinValue+0x108>
 382:	73 c0       	rjmp	.+230    	; 0x46a <DioSetPinValue+0x1ee>
	switch(port){
 384:	89 81       	ldd	r24, Y+1	; 0x01
 386:	28 2f       	mov	r18, r24
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	3d 83       	std	Y+5, r19	; 0x05
 38c:	2c 83       	std	Y+4, r18	; 0x04
 38e:	8c 81       	ldd	r24, Y+4	; 0x04
 390:	9d 81       	ldd	r25, Y+5	; 0x05
 392:	81 30       	cpi	r24, 0x01	; 1
 394:	91 05       	cpc	r25, r1
 396:	59 f1       	breq	.+86     	; 0x3ee <DioSetPinValue+0x172>
 398:	2c 81       	ldd	r18, Y+4	; 0x04
 39a:	3d 81       	ldd	r19, Y+5	; 0x05
 39c:	22 30       	cpi	r18, 0x02	; 2
 39e:	31 05       	cpc	r19, r1
 3a0:	2c f4       	brge	.+10     	; 0x3ac <DioSetPinValue+0x130>
 3a2:	8c 81       	ldd	r24, Y+4	; 0x04
 3a4:	9d 81       	ldd	r25, Y+5	; 0x05
 3a6:	00 97       	sbiw	r24, 0x00	; 0
 3a8:	69 f0       	breq	.+26     	; 0x3c4 <DioSetPinValue+0x148>
 3aa:	5f c0       	rjmp	.+190    	; 0x46a <DioSetPinValue+0x1ee>
 3ac:	2c 81       	ldd	r18, Y+4	; 0x04
 3ae:	3d 81       	ldd	r19, Y+5	; 0x05
 3b0:	22 30       	cpi	r18, 0x02	; 2
 3b2:	31 05       	cpc	r19, r1
 3b4:	89 f1       	breq	.+98     	; 0x418 <DioSetPinValue+0x19c>
 3b6:	8c 81       	ldd	r24, Y+4	; 0x04
 3b8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	91 05       	cpc	r25, r1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <DioSetPinValue+0x146>
 3c0:	40 c0       	rjmp	.+128    	; 0x442 <DioSetPinValue+0x1c6>
 3c2:	53 c0       	rjmp	.+166    	; 0x46a <DioSetPinValue+0x1ee>
case PORTA: CLR_BIT(PORTA_REG,pin);	break;
 3c4:	ab e3       	ldi	r26, 0x3B	; 59
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	eb e3       	ldi	r30, 0x3B	; 59
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	48 2f       	mov	r20, r24
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 2e       	mov	r0, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <DioSetPinValue+0x166>
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	0a 94       	dec	r0
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <DioSetPinValue+0x162>
 3e6:	80 95       	com	r24
 3e8:	84 23       	and	r24, r20
 3ea:	8c 93       	st	X, r24
 3ec:	3e c0       	rjmp	.+124    	; 0x46a <DioSetPinValue+0x1ee>
case PORTB: CLR_BIT(PORTB_REG,pin);  break;
 3ee:	a8 e3       	ldi	r26, 0x38	; 56
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	e8 e3       	ldi	r30, 0x38	; 56
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	8a 81       	ldd	r24, Y+2	; 0x02
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <DioSetPinValue+0x190>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <DioSetPinValue+0x18c>
 410:	80 95       	com	r24
 412:	84 23       	and	r24, r20
 414:	8c 93       	st	X, r24
 416:	29 c0       	rjmp	.+82     	; 0x46a <DioSetPinValue+0x1ee>
case PORTC: CLR_BIT(PORTC_REG,pin);	break;
 418:	a5 e3       	ldi	r26, 0x35	; 53
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	e5 e3       	ldi	r30, 0x35	; 53
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	80 81       	ld	r24, Z
 422:	48 2f       	mov	r20, r24
 424:	8a 81       	ldd	r24, Y+2	; 0x02
 426:	28 2f       	mov	r18, r24
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	02 2e       	mov	r0, r18
 430:	02 c0       	rjmp	.+4      	; 0x436 <DioSetPinValue+0x1ba>
 432:	88 0f       	add	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	0a 94       	dec	r0
 438:	e2 f7       	brpl	.-8      	; 0x432 <DioSetPinValue+0x1b6>
 43a:	80 95       	com	r24
 43c:	84 23       	and	r24, r20
 43e:	8c 93       	st	X, r24
 440:	14 c0       	rjmp	.+40     	; 0x46a <DioSetPinValue+0x1ee>
case PORTD: CLR_BIT(PORTD_REG,pin);	break;
 442:	a2 e3       	ldi	r26, 0x32	; 50
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e2 e3       	ldi	r30, 0x32	; 50
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	48 2f       	mov	r20, r24
 44e:	8a 81       	ldd	r24, Y+2	; 0x02
 450:	28 2f       	mov	r18, r24
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	02 2e       	mov	r0, r18
 45a:	02 c0       	rjmp	.+4      	; 0x460 <DioSetPinValue+0x1e4>
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	0a 94       	dec	r0
 462:	e2 f7       	brpl	.-8      	; 0x45c <DioSetPinValue+0x1e0>
 464:	80 95       	com	r24
 466:	84 23       	and	r24, r20
 468:	8c 93       	st	X, r24
	}

}
}
 46a:	27 96       	adiw	r28, 0x07	; 7
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	cf 91       	pop	r28
 478:	df 91       	pop	r29
 47a:	08 95       	ret

0000047c <DioGetPinValue>:
u8 DioGetPinValue(u8 port,u8 pin){
 47c:	df 93       	push	r29
 47e:	cf 93       	push	r28
 480:	00 d0       	rcall	.+0      	; 0x482 <DioGetPinValue+0x6>
 482:	00 d0       	rcall	.+0      	; 0x484 <DioGetPinValue+0x8>
 484:	0f 92       	push	r0
 486:	cd b7       	in	r28, 0x3d	; 61
 488:	de b7       	in	r29, 0x3e	; 62
 48a:	8a 83       	std	Y+2, r24	; 0x02
 48c:	6b 83       	std	Y+3, r22	; 0x03
    u8 result=0xff;
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	89 83       	std	Y+1, r24	; 0x01
	switch(port){
 492:	8a 81       	ldd	r24, Y+2	; 0x02
 494:	28 2f       	mov	r18, r24
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	3d 83       	std	Y+5, r19	; 0x05
 49a:	2c 83       	std	Y+4, r18	; 0x04
 49c:	4c 81       	ldd	r20, Y+4	; 0x04
 49e:	5d 81       	ldd	r21, Y+5	; 0x05
 4a0:	41 30       	cpi	r20, 0x01	; 1
 4a2:	51 05       	cpc	r21, r1
 4a4:	41 f1       	breq	.+80     	; 0x4f6 <DioGetPinValue+0x7a>
 4a6:	8c 81       	ldd	r24, Y+4	; 0x04
 4a8:	9d 81       	ldd	r25, Y+5	; 0x05
 4aa:	82 30       	cpi	r24, 0x02	; 2
 4ac:	91 05       	cpc	r25, r1
 4ae:	34 f4       	brge	.+12     	; 0x4bc <DioGetPinValue+0x40>
 4b0:	2c 81       	ldd	r18, Y+4	; 0x04
 4b2:	3d 81       	ldd	r19, Y+5	; 0x05
 4b4:	21 15       	cp	r18, r1
 4b6:	31 05       	cpc	r19, r1
 4b8:	61 f0       	breq	.+24     	; 0x4d2 <DioGetPinValue+0x56>
 4ba:	52 c0       	rjmp	.+164    	; 0x560 <DioGetPinValue+0xe4>
 4bc:	4c 81       	ldd	r20, Y+4	; 0x04
 4be:	5d 81       	ldd	r21, Y+5	; 0x05
 4c0:	42 30       	cpi	r20, 0x02	; 2
 4c2:	51 05       	cpc	r21, r1
 4c4:	51 f1       	breq	.+84     	; 0x51a <DioGetPinValue+0x9e>
 4c6:	8c 81       	ldd	r24, Y+4	; 0x04
 4c8:	9d 81       	ldd	r25, Y+5	; 0x05
 4ca:	83 30       	cpi	r24, 0x03	; 3
 4cc:	91 05       	cpc	r25, r1
 4ce:	b9 f1       	breq	.+110    	; 0x53e <DioGetPinValue+0xc2>
 4d0:	47 c0       	rjmp	.+142    	; 0x560 <DioGetPinValue+0xe4>
case PORTA: result=GET_BIT(PINA_REG,pin);	break;
 4d2:	e9 e3       	ldi	r30, 0x39	; 57
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	80 81       	ld	r24, Z
 4d8:	28 2f       	mov	r18, r24
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	8b 81       	ldd	r24, Y+3	; 0x03
 4de:	88 2f       	mov	r24, r24
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	a9 01       	movw	r20, r18
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <DioGetPinValue+0x6e>
 4e6:	55 95       	asr	r21
 4e8:	47 95       	ror	r20
 4ea:	8a 95       	dec	r24
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <DioGetPinValue+0x6a>
 4ee:	ca 01       	movw	r24, r20
 4f0:	81 70       	andi	r24, 0x01	; 1
 4f2:	89 83       	std	Y+1, r24	; 0x01
 4f4:	35 c0       	rjmp	.+106    	; 0x560 <DioGetPinValue+0xe4>
case PORTB: result=GET_BIT(PINB_REG,pin);  break;
 4f6:	e6 e3       	ldi	r30, 0x36	; 54
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	80 81       	ld	r24, Z
 4fc:	28 2f       	mov	r18, r24
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	8b 81       	ldd	r24, Y+3	; 0x03
 502:	88 2f       	mov	r24, r24
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	a9 01       	movw	r20, r18
 508:	02 c0       	rjmp	.+4      	; 0x50e <DioGetPinValue+0x92>
 50a:	55 95       	asr	r21
 50c:	47 95       	ror	r20
 50e:	8a 95       	dec	r24
 510:	e2 f7       	brpl	.-8      	; 0x50a <DioGetPinValue+0x8e>
 512:	ca 01       	movw	r24, r20
 514:	81 70       	andi	r24, 0x01	; 1
 516:	89 83       	std	Y+1, r24	; 0x01
 518:	23 c0       	rjmp	.+70     	; 0x560 <DioGetPinValue+0xe4>
case PORTC: result=GET_BIT(PINC_REG,pin);	break;
 51a:	e3 e3       	ldi	r30, 0x33	; 51
 51c:	f0 e0       	ldi	r31, 0x00	; 0
 51e:	80 81       	ld	r24, Z
 520:	28 2f       	mov	r18, r24
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	8b 81       	ldd	r24, Y+3	; 0x03
 526:	88 2f       	mov	r24, r24
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	a9 01       	movw	r20, r18
 52c:	02 c0       	rjmp	.+4      	; 0x532 <DioGetPinValue+0xb6>
 52e:	55 95       	asr	r21
 530:	47 95       	ror	r20
 532:	8a 95       	dec	r24
 534:	e2 f7       	brpl	.-8      	; 0x52e <DioGetPinValue+0xb2>
 536:	ca 01       	movw	r24, r20
 538:	81 70       	andi	r24, 0x01	; 1
 53a:	89 83       	std	Y+1, r24	; 0x01
 53c:	11 c0       	rjmp	.+34     	; 0x560 <DioGetPinValue+0xe4>
case PORTD: result=GET_BIT(PIND_REG,pin);	break; 	}
 53e:	e0 e3       	ldi	r30, 0x30	; 48
 540:	f0 e0       	ldi	r31, 0x00	; 0
 542:	80 81       	ld	r24, Z
 544:	28 2f       	mov	r18, r24
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	8b 81       	ldd	r24, Y+3	; 0x03
 54a:	88 2f       	mov	r24, r24
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	a9 01       	movw	r20, r18
 550:	02 c0       	rjmp	.+4      	; 0x556 <DioGetPinValue+0xda>
 552:	55 95       	asr	r21
 554:	47 95       	ror	r20
 556:	8a 95       	dec	r24
 558:	e2 f7       	brpl	.-8      	; 0x552 <DioGetPinValue+0xd6>
 55a:	ca 01       	movw	r24, r20
 55c:	81 70       	andi	r24, 0x01	; 1
 55e:	89 83       	std	Y+1, r24	; 0x01
	return result;
 560:	89 81       	ldd	r24, Y+1	; 0x01

}
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	0f 90       	pop	r0
 56c:	cf 91       	pop	r28
 56e:	df 91       	pop	r29
 570:	08 95       	ret

00000572 <DioSetPortDirection>:
void DioSetPortDirection(u8 port,u8 direction){
 572:	df 93       	push	r29
 574:	cf 93       	push	r28
 576:	00 d0       	rcall	.+0      	; 0x578 <DioSetPortDirection+0x6>
 578:	00 d0       	rcall	.+0      	; 0x57a <DioSetPortDirection+0x8>
 57a:	cd b7       	in	r28, 0x3d	; 61
 57c:	de b7       	in	r29, 0x3e	; 62
 57e:	89 83       	std	Y+1, r24	; 0x01
 580:	6a 83       	std	Y+2, r22	; 0x02
switch(port){
 582:	89 81       	ldd	r24, Y+1	; 0x01
 584:	28 2f       	mov	r18, r24
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	3c 83       	std	Y+4, r19	; 0x04
 58a:	2b 83       	std	Y+3, r18	; 0x03
 58c:	8b 81       	ldd	r24, Y+3	; 0x03
 58e:	9c 81       	ldd	r25, Y+4	; 0x04
 590:	81 30       	cpi	r24, 0x01	; 1
 592:	91 05       	cpc	r25, r1
 594:	d1 f0       	breq	.+52     	; 0x5ca <DioSetPortDirection+0x58>
 596:	2b 81       	ldd	r18, Y+3	; 0x03
 598:	3c 81       	ldd	r19, Y+4	; 0x04
 59a:	22 30       	cpi	r18, 0x02	; 2
 59c:	31 05       	cpc	r19, r1
 59e:	2c f4       	brge	.+10     	; 0x5aa <DioSetPortDirection+0x38>
 5a0:	8b 81       	ldd	r24, Y+3	; 0x03
 5a2:	9c 81       	ldd	r25, Y+4	; 0x04
 5a4:	00 97       	sbiw	r24, 0x00	; 0
 5a6:	61 f0       	breq	.+24     	; 0x5c0 <DioSetPortDirection+0x4e>
 5a8:	1e c0       	rjmp	.+60     	; 0x5e6 <DioSetPortDirection+0x74>
 5aa:	2b 81       	ldd	r18, Y+3	; 0x03
 5ac:	3c 81       	ldd	r19, Y+4	; 0x04
 5ae:	22 30       	cpi	r18, 0x02	; 2
 5b0:	31 05       	cpc	r19, r1
 5b2:	81 f0       	breq	.+32     	; 0x5d4 <DioSetPortDirection+0x62>
 5b4:	8b 81       	ldd	r24, Y+3	; 0x03
 5b6:	9c 81       	ldd	r25, Y+4	; 0x04
 5b8:	83 30       	cpi	r24, 0x03	; 3
 5ba:	91 05       	cpc	r25, r1
 5bc:	81 f0       	breq	.+32     	; 0x5de <DioSetPortDirection+0x6c>
 5be:	13 c0       	rjmp	.+38     	; 0x5e6 <DioSetPortDirection+0x74>
case PORTA: DDRA_REG=direction;	break;
 5c0:	ea e3       	ldi	r30, 0x3A	; 58
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	8a 81       	ldd	r24, Y+2	; 0x02
 5c6:	80 83       	st	Z, r24
 5c8:	0e c0       	rjmp	.+28     	; 0x5e6 <DioSetPortDirection+0x74>
case PORTB: DDRB_REG=direction;	break;
 5ca:	e7 e3       	ldi	r30, 0x37	; 55
 5cc:	f0 e0       	ldi	r31, 0x00	; 0
 5ce:	8a 81       	ldd	r24, Y+2	; 0x02
 5d0:	80 83       	st	Z, r24
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <DioSetPortDirection+0x74>
case PORTC: DDRC_REG=direction;	break;
 5d4:	e4 e3       	ldi	r30, 0x34	; 52
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	8a 81       	ldd	r24, Y+2	; 0x02
 5da:	80 83       	st	Z, r24
 5dc:	04 c0       	rjmp	.+8      	; 0x5e6 <DioSetPortDirection+0x74>
case PORTD: DDRD_REG=direction;	break;
 5de:	e1 e3       	ldi	r30, 0x31	; 49
 5e0:	f0 e0       	ldi	r31, 0x00	; 0
 5e2:	8a 81       	ldd	r24, Y+2	; 0x02
 5e4:	80 83       	st	Z, r24

}

}
 5e6:	0f 90       	pop	r0
 5e8:	0f 90       	pop	r0
 5ea:	0f 90       	pop	r0
 5ec:	0f 90       	pop	r0
 5ee:	cf 91       	pop	r28
 5f0:	df 91       	pop	r29
 5f2:	08 95       	ret

000005f4 <DioSetPortValue>:
void DioSetPortValue(u8 port,u8 value){
 5f4:	df 93       	push	r29
 5f6:	cf 93       	push	r28
 5f8:	00 d0       	rcall	.+0      	; 0x5fa <DioSetPortValue+0x6>
 5fa:	00 d0       	rcall	.+0      	; 0x5fc <DioSetPortValue+0x8>
 5fc:	cd b7       	in	r28, 0x3d	; 61
 5fe:	de b7       	in	r29, 0x3e	; 62
 600:	89 83       	std	Y+1, r24	; 0x01
 602:	6a 83       	std	Y+2, r22	; 0x02
	switch(port){
 604:	89 81       	ldd	r24, Y+1	; 0x01
 606:	28 2f       	mov	r18, r24
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	3c 83       	std	Y+4, r19	; 0x04
 60c:	2b 83       	std	Y+3, r18	; 0x03
 60e:	8b 81       	ldd	r24, Y+3	; 0x03
 610:	9c 81       	ldd	r25, Y+4	; 0x04
 612:	81 30       	cpi	r24, 0x01	; 1
 614:	91 05       	cpc	r25, r1
 616:	d1 f0       	breq	.+52     	; 0x64c <DioSetPortValue+0x58>
 618:	2b 81       	ldd	r18, Y+3	; 0x03
 61a:	3c 81       	ldd	r19, Y+4	; 0x04
 61c:	22 30       	cpi	r18, 0x02	; 2
 61e:	31 05       	cpc	r19, r1
 620:	2c f4       	brge	.+10     	; 0x62c <DioSetPortValue+0x38>
 622:	8b 81       	ldd	r24, Y+3	; 0x03
 624:	9c 81       	ldd	r25, Y+4	; 0x04
 626:	00 97       	sbiw	r24, 0x00	; 0
 628:	61 f0       	breq	.+24     	; 0x642 <DioSetPortValue+0x4e>
 62a:	1e c0       	rjmp	.+60     	; 0x668 <DioSetPortValue+0x74>
 62c:	2b 81       	ldd	r18, Y+3	; 0x03
 62e:	3c 81       	ldd	r19, Y+4	; 0x04
 630:	22 30       	cpi	r18, 0x02	; 2
 632:	31 05       	cpc	r19, r1
 634:	81 f0       	breq	.+32     	; 0x656 <DioSetPortValue+0x62>
 636:	8b 81       	ldd	r24, Y+3	; 0x03
 638:	9c 81       	ldd	r25, Y+4	; 0x04
 63a:	83 30       	cpi	r24, 0x03	; 3
 63c:	91 05       	cpc	r25, r1
 63e:	81 f0       	breq	.+32     	; 0x660 <DioSetPortValue+0x6c>
 640:	13 c0       	rjmp	.+38     	; 0x668 <DioSetPortValue+0x74>
case PORTA: PORTA_REG=value;	break;
 642:	eb e3       	ldi	r30, 0x3B	; 59
 644:	f0 e0       	ldi	r31, 0x00	; 0
 646:	8a 81       	ldd	r24, Y+2	; 0x02
 648:	80 83       	st	Z, r24
 64a:	0e c0       	rjmp	.+28     	; 0x668 <DioSetPortValue+0x74>
case PORTB: PORTB_REG=value;	break;
 64c:	e8 e3       	ldi	r30, 0x38	; 56
 64e:	f0 e0       	ldi	r31, 0x00	; 0
 650:	8a 81       	ldd	r24, Y+2	; 0x02
 652:	80 83       	st	Z, r24
 654:	09 c0       	rjmp	.+18     	; 0x668 <DioSetPortValue+0x74>
case PORTC: PORTC_REG=value;	break;
 656:	e5 e3       	ldi	r30, 0x35	; 53
 658:	f0 e0       	ldi	r31, 0x00	; 0
 65a:	8a 81       	ldd	r24, Y+2	; 0x02
 65c:	80 83       	st	Z, r24
 65e:	04 c0       	rjmp	.+8      	; 0x668 <DioSetPortValue+0x74>
case PORTD: PORTD_REG=value;	break;
 660:	e2 e3       	ldi	r30, 0x32	; 50
 662:	f0 e0       	ldi	r31, 0x00	; 0
 664:	8a 81       	ldd	r24, Y+2	; 0x02
 666:	80 83       	st	Z, r24





}
 668:	0f 90       	pop	r0
 66a:	0f 90       	pop	r0
 66c:	0f 90       	pop	r0
 66e:	0f 90       	pop	r0
 670:	cf 91       	pop	r28
 672:	df 91       	pop	r29
 674:	08 95       	ret

00000676 <DioGetPortValue>:
u8 DioGetPortValue(u8 port){
 676:	df 93       	push	r29
 678:	cf 93       	push	r28
 67a:	00 d0       	rcall	.+0      	; 0x67c <DioGetPortValue+0x6>
 67c:	00 d0       	rcall	.+0      	; 0x67e <DioGetPortValue+0x8>
 67e:	cd b7       	in	r28, 0x3d	; 61
 680:	de b7       	in	r29, 0x3e	; 62
 682:	8a 83       	std	Y+2, r24	; 0x02
    u8 result=0x00;
 684:	19 82       	std	Y+1, r1	; 0x01
	switch(port){
 686:	8a 81       	ldd	r24, Y+2	; 0x02
 688:	28 2f       	mov	r18, r24
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	3c 83       	std	Y+4, r19	; 0x04
 68e:	2b 83       	std	Y+3, r18	; 0x03
 690:	8b 81       	ldd	r24, Y+3	; 0x03
 692:	9c 81       	ldd	r25, Y+4	; 0x04
 694:	81 30       	cpi	r24, 0x01	; 1
 696:	91 05       	cpc	r25, r1
 698:	d1 f0       	breq	.+52     	; 0x6ce <DioGetPortValue+0x58>
 69a:	2b 81       	ldd	r18, Y+3	; 0x03
 69c:	3c 81       	ldd	r19, Y+4	; 0x04
 69e:	22 30       	cpi	r18, 0x02	; 2
 6a0:	31 05       	cpc	r19, r1
 6a2:	2c f4       	brge	.+10     	; 0x6ae <DioGetPortValue+0x38>
 6a4:	8b 81       	ldd	r24, Y+3	; 0x03
 6a6:	9c 81       	ldd	r25, Y+4	; 0x04
 6a8:	00 97       	sbiw	r24, 0x00	; 0
 6aa:	61 f0       	breq	.+24     	; 0x6c4 <DioGetPortValue+0x4e>
 6ac:	1e c0       	rjmp	.+60     	; 0x6ea <DioGetPortValue+0x74>
 6ae:	2b 81       	ldd	r18, Y+3	; 0x03
 6b0:	3c 81       	ldd	r19, Y+4	; 0x04
 6b2:	22 30       	cpi	r18, 0x02	; 2
 6b4:	31 05       	cpc	r19, r1
 6b6:	81 f0       	breq	.+32     	; 0x6d8 <DioGetPortValue+0x62>
 6b8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ba:	9c 81       	ldd	r25, Y+4	; 0x04
 6bc:	83 30       	cpi	r24, 0x03	; 3
 6be:	91 05       	cpc	r25, r1
 6c0:	81 f0       	breq	.+32     	; 0x6e2 <DioGetPortValue+0x6c>
 6c2:	13 c0       	rjmp	.+38     	; 0x6ea <DioGetPortValue+0x74>
case PORTA: result=PINA_REG;	break;
 6c4:	e9 e3       	ldi	r30, 0x39	; 57
 6c6:	f0 e0       	ldi	r31, 0x00	; 0
 6c8:	80 81       	ld	r24, Z
 6ca:	89 83       	std	Y+1, r24	; 0x01
 6cc:	0e c0       	rjmp	.+28     	; 0x6ea <DioGetPortValue+0x74>
case PORTB: result=PINB_REG;	break;
 6ce:	e6 e3       	ldi	r30, 0x36	; 54
 6d0:	f0 e0       	ldi	r31, 0x00	; 0
 6d2:	80 81       	ld	r24, Z
 6d4:	89 83       	std	Y+1, r24	; 0x01
 6d6:	09 c0       	rjmp	.+18     	; 0x6ea <DioGetPortValue+0x74>
case PORTC: result=PINC_REG;	break;
 6d8:	e3 e3       	ldi	r30, 0x33	; 51
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	89 83       	std	Y+1, r24	; 0x01
 6e0:	04 c0       	rjmp	.+8      	; 0x6ea <DioGetPortValue+0x74>
case PORTD: result=PIND_REG;	break; 	}
 6e2:	e0 e3       	ldi	r30, 0x30	; 48
 6e4:	f0 e0       	ldi	r31, 0x00	; 0
 6e6:	80 81       	ld	r24, Z
 6e8:	89 83       	std	Y+1, r24	; 0x01
	return result;
 6ea:	89 81       	ldd	r24, Y+1	; 0x01

}
 6ec:	0f 90       	pop	r0
 6ee:	0f 90       	pop	r0
 6f0:	0f 90       	pop	r0
 6f2:	0f 90       	pop	r0
 6f4:	cf 91       	pop	r28
 6f6:	df 91       	pop	r29
 6f8:	08 95       	ret

000006fa <UART_Init>:

//com4
#include "UART_interface.h"
u8 temp=0; //used to map values once to UCSRC

void UART_Init() {
 6fa:	df 93       	push	r29
 6fc:	cf 93       	push	r28
 6fe:	cd b7       	in	r28, 0x3d	; 61
 700:	de b7       	in	r29, 0x3e	; 62
    // RX,TX enable
    SET_BIT(UCSRB, 4);
 702:	aa e2       	ldi	r26, 0x2A	; 42
 704:	b0 e0       	ldi	r27, 0x00	; 0
 706:	ea e2       	ldi	r30, 0x2A	; 42
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	80 81       	ld	r24, Z
 70c:	91 81       	ldd	r25, Z+1	; 0x01
 70e:	80 61       	ori	r24, 0x10	; 16
 710:	11 96       	adiw	r26, 0x01	; 1
 712:	9c 93       	st	X, r25
 714:	8e 93       	st	-X, r24
    SET_BIT(UCSRB, 3);
 716:	aa e2       	ldi	r26, 0x2A	; 42
 718:	b0 e0       	ldi	r27, 0x00	; 0
 71a:	ea e2       	ldi	r30, 0x2A	; 42
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	80 81       	ld	r24, Z
 720:	91 81       	ldd	r25, Z+1	; 0x01
 722:	88 60       	ori	r24, 0x08	; 8
 724:	11 96       	adiw	r26, 0x01	; 1
 726:	9c 93       	st	X, r25
 728:	8e 93       	st	-X, r24
    //no of data bits=8
    // *CLR bit 2 UCSRB
    CLR_BIT(UCSRB, 2);
 72a:	aa e2       	ldi	r26, 0x2A	; 42
 72c:	b0 e0       	ldi	r27, 0x00	; 0
 72e:	ea e2       	ldi	r30, 0x2A	; 42
 730:	f0 e0       	ldi	r31, 0x00	; 0
 732:	80 81       	ld	r24, Z
 734:	91 81       	ldd	r25, Z+1	; 0x01
 736:	8b 7f       	andi	r24, 0xFB	; 251
 738:	11 96       	adiw	r26, 0x01	; 1
 73a:	9c 93       	st	X, r25
 73c:	8e 93       	st	-X, r24
   // *SET bit 1,0 UCSRC
    SET_BIT(temp, 2);
 73e:	80 91 60 00 	lds	r24, 0x0060
 742:	84 60       	ori	r24, 0x04	; 4
 744:	80 93 60 00 	sts	0x0060, r24
    SET_BIT(temp, 1);
 748:	80 91 60 00 	lds	r24, 0x0060
 74c:	82 60       	ori	r24, 0x02	; 2
 74e:	80 93 60 00 	sts	0x0060, r24
    //UCSRC
    SET_BIT(temp, 7);
 752:	80 91 60 00 	lds	r24, 0x0060
 756:	80 68       	ori	r24, 0x80	; 128
 758:	80 93 60 00 	sts	0x0060, r24
    //asynchronous
    CLR_BIT(temp, 6);
 75c:	80 91 60 00 	lds	r24, 0x0060
 760:	8f 7b       	andi	r24, 0xBF	; 191
 762:	80 93 60 00 	sts	0x0060, r24
    //no parity
    CLR_BIT(temp, 5);
 766:	80 91 60 00 	lds	r24, 0x0060
 76a:	8f 7d       	andi	r24, 0xDF	; 223
 76c:	80 93 60 00 	sts	0x0060, r24
    CLR_BIT(temp, 4);
 770:	80 91 60 00 	lds	r24, 0x0060
 774:	8f 7e       	andi	r24, 0xEF	; 239
 776:	80 93 60 00 	sts	0x0060, r24
    // one stop bit
    CLR_BIT(temp, 3);
 77a:	80 91 60 00 	lds	r24, 0x0060
 77e:	87 7f       	andi	r24, 0xF7	; 247
 780:	80 93 60 00 	sts	0x0060, r24

    UCSRC=temp;
 784:	e0 e4       	ldi	r30, 0x40	; 64
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	80 91 60 00 	lds	r24, 0x0060
 78c:	80 83       	st	Z, r24
    //baud rate=9600  with 8MHZ freq
    UCSRC=0x00;
 78e:	e0 e4       	ldi	r30, 0x40	; 64
 790:	f0 e0       	ldi	r31, 0x00	; 0
 792:	10 82       	st	Z, r1
    UBRRL=51;
 794:	e9 e2       	ldi	r30, 0x29	; 41
 796:	f0 e0       	ldi	r31, 0x00	; 0
 798:	83 e3       	ldi	r24, 0x33	; 51
 79a:	80 83       	st	Z, r24
}
 79c:	cf 91       	pop	r28
 79e:	df 91       	pop	r29
 7a0:	08 95       	ret

000007a2 <UART_Transmit>:
void UART_Transmit(u8 data){
 7a2:	df 93       	push	r29
 7a4:	cf 93       	push	r28
 7a6:	0f 92       	push	r0
 7a8:	cd b7       	in	r28, 0x3d	; 61
 7aa:	de b7       	in	r29, 0x3e	; 62
 7ac:	89 83       	std	Y+1, r24	; 0x01
    UDR=data;
 7ae:	ec e2       	ldi	r30, 0x2C	; 44
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	89 81       	ldd	r24, Y+1	; 0x01
 7b4:	80 83       	st	Z, r24
    while(GET_BIT(UCSRA,6)==0); //wait until flag is set (transmission done))
 7b6:	eb e2       	ldi	r30, 0x2B	; 43
 7b8:	f0 e0       	ldi	r31, 0x00	; 0
 7ba:	80 81       	ld	r24, Z
 7bc:	82 95       	swap	r24
 7be:	86 95       	lsr	r24
 7c0:	86 95       	lsr	r24
 7c2:	83 70       	andi	r24, 0x03	; 3
 7c4:	88 2f       	mov	r24, r24
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	81 70       	andi	r24, 0x01	; 1
 7ca:	90 70       	andi	r25, 0x00	; 0
 7cc:	00 97       	sbiw	r24, 0x00	; 0
 7ce:	99 f3       	breq	.-26     	; 0x7b6 <UART_Transmit+0x14>
    SET_BIT(UCSRA,6);           //clear flag
 7d0:	ab e2       	ldi	r26, 0x2B	; 43
 7d2:	b0 e0       	ldi	r27, 0x00	; 0
 7d4:	eb e2       	ldi	r30, 0x2B	; 43
 7d6:	f0 e0       	ldi	r31, 0x00	; 0
 7d8:	80 81       	ld	r24, Z
 7da:	80 64       	ori	r24, 0x40	; 64
 7dc:	8c 93       	st	X, r24
}
 7de:	0f 90       	pop	r0
 7e0:	cf 91       	pop	r28
 7e2:	df 91       	pop	r29
 7e4:	08 95       	ret

000007e6 <UART_Receive>:

u8 UART_Receive(){
 7e6:	df 93       	push	r29
 7e8:	cf 93       	push	r28
 7ea:	0f 92       	push	r0
 7ec:	cd b7       	in	r28, 0x3d	; 61
 7ee:	de b7       	in	r29, 0x3e	; 62
    u8 data=0;
 7f0:	19 82       	std	Y+1, r1	; 0x01
    while(GET_BIT(UCSRA,7)==0);
 7f2:	eb e2       	ldi	r30, 0x2B	; 43
 7f4:	f0 e0       	ldi	r31, 0x00	; 0
 7f6:	80 81       	ld	r24, Z
 7f8:	88 23       	and	r24, r24
 7fa:	dc f7       	brge	.-10     	; 0x7f2 <UART_Receive+0xc>
    data=UDR;
 7fc:	ec e2       	ldi	r30, 0x2C	; 44
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	80 81       	ld	r24, Z
 802:	89 83       	std	Y+1, r24	; 0x01
    return data;
 804:	89 81       	ldd	r24, Y+1	; 0x01
}
 806:	0f 90       	pop	r0
 808:	cf 91       	pop	r28
 80a:	df 91       	pop	r29
 80c:	08 95       	ret

0000080e <main>:
#include "DioInterface.h"

#define ledport PORTA
#define led  0

void main(void) {
 80e:	df 93       	push	r29
 810:	cf 93       	push	r28
 812:	0f 92       	push	r0
 814:	cd b7       	in	r28, 0x3d	; 61
 816:	de b7       	in	r29, 0x3e	; 62
  DioSetPinDirection(PORTD,0,INPUT);
 818:	83 e0       	ldi	r24, 0x03	; 3
 81a:	60 e0       	ldi	r22, 0x00	; 0
 81c:	40 e0       	ldi	r20, 0x00	; 0
 81e:	0e 94 3e 00 	call	0x7c	; 0x7c <DioSetPinDirection>
  DioSetPinDirection(PORTD,1,OUTPUT);
 822:	83 e0       	ldi	r24, 0x03	; 3
 824:	61 e0       	ldi	r22, 0x01	; 1
 826:	41 e0       	ldi	r20, 0x01	; 1
 828:	0e 94 3e 00 	call	0x7c	; 0x7c <DioSetPinDirection>
  //DioSetPinValue(PORTD,1,0);
 UART_Init();
 82c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <UART_Init>
  DioSetPinDirection(PORTA,0,OUTPUT);
 830:	80 e0       	ldi	r24, 0x00	; 0
 832:	60 e0       	ldi	r22, 0x00	; 0
 834:	41 e0       	ldi	r20, 0x01	; 1
 836:	0e 94 3e 00 	call	0x7c	; 0x7c <DioSetPinDirection>
  DioSetPinValue(PORTA,0,0);
 83a:	80 e0       	ldi	r24, 0x00	; 0
 83c:	60 e0       	ldi	r22, 0x00	; 0
 83e:	40 e0       	ldi	r20, 0x00	; 0
 840:	0e 94 3e 01 	call	0x27c	; 0x27c <DioSetPinValue>
 while(1)
 {
	 u8 data=UART_Receive();
 844:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <UART_Receive>
 848:	89 83       	std	Y+1, r24	; 0x01
    if(data=='a')
 84a:	89 81       	ldd	r24, Y+1	; 0x01
 84c:	81 36       	cpi	r24, 0x61	; 97
 84e:	29 f4       	brne	.+10     	; 0x85a <main+0x4c>
    {
        DioSetPinValue(PORTA,0,1);
 850:	80 e0       	ldi	r24, 0x00	; 0
 852:	60 e0       	ldi	r22, 0x00	; 0
 854:	41 e0       	ldi	r20, 0x01	; 1
 856:	0e 94 3e 01 	call	0x27c	; 0x27c <DioSetPinValue>
    }
    UART_Transmit(data);
 85a:	89 81       	ldd	r24, Y+1	; 0x01
 85c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <UART_Transmit>
 860:	f1 cf       	rjmp	.-30     	; 0x844 <main+0x36>

00000862 <_exit>:
 862:	f8 94       	cli

00000864 <__stop_program>:
 864:	ff cf       	rjmp	.-2      	; 0x864 <__stop_program>
