/*
 * main.c
 *
 *  Created on: Dec 6, 2022
 *      Author: .noa
 */
#include "../LIB/STD_TYPES.h"
#include "../LIB/BIT_MATH.h"

#include "../MCAL/DIO/DIO_INT.h"
#include "../MCAL/DIO/DIO_config.h"

#include "../FREE_RTOS/FreeRTOSConfig.h"
#include "../FREE_RTOS/FreeRTOS.h"
#include "../FREE_RTOS/task.h"
#include "../FREE_RTOS/semphr.h"

void led_task1(void *ptr);
void led_task2(void *ptr);
xSemaphoreHandle led_sem;
xSemaphoreHandle led_sem1;
int main()
{
	DIO_VidSetPinDirection(DIO_PORTA,PIN0,OUTPUT);
	DIO_VidSetPinDirection(DIO_PORTA,PIN1,OUTPUT);
	//vSemaphoreCreateBinary(led_sem);
	led_sem1=xSemaphoreCreateCounting(1,1);
	xTaskCreate(led_task1,NULL,100,NULL,4,NULL);
	xTaskCreate(led_task2,NULL,100,NULL,2,NULL);

	vTaskStartScheduler();

	while(1)
	{

	}
	return 0;
}

void led_task1(void *ptr)
{
	while(1)
	{
		if(xSemaphoreTake(led_sem1,10))
		{
			DIO_u8TogglePinValue(DIO_PORTA,PIN0);
			xSemaphoreGive(led_sem1);
		}
		else
		{

		}

		vTaskDelay(500);//periodicty

	}

}
void led_task2(void *ptr)
{
	//vTaskDelay(500);//first delay
	while(1)
	{
		if(xSemaphoreTake(led_sem1,10))
		{
			DIO_u8TogglePinValue(DIO_PORTA,PIN1);
			//xSemaphoreGive(led_sem);
		}
		else
		{

		}
		vTaskDelay(500);
	}
}

